{"version":3,"sources":["socket.js","reducer.js","components/JoinBlock.jsx","components/Chat.jsx","App.js","index.js"],"names":["socket","io","reducer","state","action","type","joined","roomId","payload","userName","users","messages","JoinBlock","onLogin","React","useState","setRoomId","setUserName","isLoading","setLoading","onEnter","a","alert","obj","axios","post","className","placeholder","value","onChange","e","target","disabled","onClick","Chat","onAddMessage","messageValue","setMessageValue","messagesRef","useRef","useEffect","current","scrollTo","scrollHeight","length","map","name","index","ref","message","text","rows","emit","App","useReducer","dispatch","get","data","setUsers","addMessage","on","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.580c4c58.chunk.js","sourcesContent":["import io from 'socket.io-client';\n\nconst socket = io('https://apricot-cake-93937.herokuapp.com/');\n\nexport default socket;\n","const reducer = (state, action) => {\n  switch (action.type) {\n    case 'JOINED':\n      return {\n        ...state,\n        joined: true,\n        roomId: action.payload.roomId,\n        userName: action.payload.userName,\n      };\n\n    case 'SET_DATA':\n      return {\n        ...state,\n        users: action.payload.users,\n        messages: action.payload.messages,\n      };\n\n    case 'SET_USERS':\n      return {\n        ...state,\n        users: action.payload,\n      };\n\n    case 'NEW_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.payload],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport axios from 'axios';\n\nfunction JoinBlock({ onLogin }) {\n  const [roomId, setRoomId] = React.useState('');\n  const [userName, setUserName] = React.useState('');\n  const [isLoading, setLoading] = React.useState(false);\n\n  const onEnter = async () => {\n    if (!roomId || !userName) {\n      return alert('Неверные данные');\n    }\n\n    const obj = {\n      roomId,\n      userName,\n    };\n\n    setLoading(true);\n    await axios.post('/rooms', obj);\n    onLogin(obj);\n  };\n\n  return (\n    <div className=\"join-block\">\n      <input\n        type=\"text\"\n        placeholder=\"ID комнаты\"\n        value={roomId}\n        onChange={(e) => setRoomId(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Ваше имя\"\n        value={userName}\n        onChange={(e) => setUserName(e.target.value)}\n      />\n      <button\n        disabled={isLoading}\n        onClick={onEnter}\n        className=\"btn btn-success\"\n      >\n        {isLoading ? 'ВХОД...' : 'ВОЙТИ'}\n      </button>\n    </div>\n  );\n}\n\nexport default JoinBlock;\n","import React from 'react';\nimport socket from '../socket';\n\nfunction Chat({ users, messages, roomId, userName, onAddMessage }) {\n  const [messageValue, setMessageValue] = React.useState('');\n  const messagesRef = React.useRef(null);\n\n  const onSendMessage = () => {\n    socket.emit('ROOM:NEW_MESSAGE', {\n      userName,\n      roomId,\n      text: messageValue,\n    });\n    onAddMessage({\n      userName,\n      text: messageValue,\n    });\n    setMessageValue('');\n  };\n\n  React.useEffect(() => {\n    messagesRef.current.scrollTo(0, messagesRef.current.scrollHeight);\n  }, [messages]);\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat-users\">\n        Комната: <b>{roomId}</b>\n        <hr />\n        <b>Онлайн: {users.length}</b>\n        <ul>\n          {users.map((name, index) => (\n            <li key={name + index}>{name}</li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"chat-messages\">\n        <div ref={messagesRef} className=\"messages\">\n          {messages.map((message) => (\n            <div className=\"message\">\n              <p>{message.text}</p>\n              <div>\n                <span>{message.userName}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n        <form>\n          <textarea\n            value={messageValue}\n            onChange={(e) => setMessageValue(e.target.value)}\n            className=\"form-control\"\n            rows=\"3\"\n          ></textarea>\n          <button\n            onClick={onSendMessage}\n            type=\"button\"\n            className=\"btn btn-primary\"\n          >\n            Отправить\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","import React from 'react';\nimport axios from 'axios';\nimport socket from './socket';\n\nimport reducer from './reducer';\nimport JoinBlock from './components/JoinBlock';\nimport Chat from './components/Chat';\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, {\n    joined: false,\n    roomId: null,\n    userName: null,\n    users: [],\n    messages: [],\n  });\n\n  const onLogin = async (obj) => {\n    dispatch({\n      type: 'JOINED',\n      payload: obj,\n    });\n    socket.emit('ROOM:JOIN', obj);\n    const { data } = await axios.get(`/rooms/${obj.roomId}`);\n    dispatch({\n      type: 'SET_DATA',\n      payload: data,\n    });\n  };\n\n  const setUsers = (users) => {\n    dispatch({\n      type: 'SET_USERS',\n      payload: users,\n    });\n  };\n\n  const addMessage = (message) => {\n    dispatch({\n      type: 'NEW_MESSAGE',\n      payload: message,\n    });\n  };\n\n  React.useEffect(() => {\n    socket.on('ROOM:SET_USERS', setUsers);\n    socket.on('ROOM:NEW_MESSAGE', addMessage);\n  }, []);\n\n  return (\n    <div className=\"wrapper\">\n      {!state.joined ? (\n        <JoinBlock onLogin={onLogin} />\n      ) : (\n        <Chat {...state} onAddMessage={addMessage} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App'\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}